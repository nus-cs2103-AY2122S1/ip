        return new Task(done, finalAction);
    }

    /**
     * Check the format of the input for Deadline
     * @param action
     * @param date
     * @throws DeadlineExceptions
     */
    private void checkDeadlineFormat(String action, String date) throws DeadlineExceptions {
        if (!action.equals("")) {
            String[] formatDate = date.split(":");


        }
    }

    /**
     * Check the format of the input for Events
     * @param action
     * @param date
     * @throws EventsException
     */
    private void checkEventsFormat(String action, String date) throws EventsException {
        if (!action.equals("")) {
            String[] formatDate = date.split(":");

        } else {
            String[] newInput = input.split(" ");
            if (newInput[0].equals("done")) {
                doneAction(newInput);
            } else if (newInput[0].equals("delete")) {
                deleteAction(newInput);
            } else {
                try {
                    Task newTask = createTask(input);

        }
    }

    /**
     * perform the action for done
     * @param input
     */
    private void doneAction(String[] input) {
        if ( input.length < 2) {
            System.out.println("invalid syntax");
        } else {
            int index = Integer.parseInt(input[1]);
            if (index <= taskList.size() && index > 0) {
                taskList.get(index - 1).done();
            } else {
                System.out.println("invalid index");
            }
        }
    }

    private void deleteAction(String[] input) {
        if ( input.length < 2) {
            System.out.println("invalid syntax");
        } else {
            int index = Integer.parseInt(input[1]);
            if (index <= taskList.size() && index > 0) {
                System.out.println("Noted. I've removed this task: ");

                System.out.println("    " + taskList.get(index - 1).toString());
                taskList.remove(index - 1);
                System.out.format("Now you have %d tasks in the list.\n", taskList.size());
            } else {
                System.out.println("invalid index");
            }
        }
    }

    /**
     * create a message to show all the tasks and their states.
     */